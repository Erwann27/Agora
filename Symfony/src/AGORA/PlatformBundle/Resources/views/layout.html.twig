<!DOCTYPE html>
<html class="h-100" lang="fr">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <meta name="description" content="">
    <meta name="author" content="">

    <title>{% block title %}AGORA{% endblock %}</title>

    <link rel="icon" type="image/x-icon" href="{{ asset('bundles/agoraplatform/image/favicon.ico') }}" alt="favicon"/>

    <!-- Importation de la librairie Bootstrap : "https://getbootstrap.com/docs/4.3/getting-started/introduction/" -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>


    <!-- CSS du Bundle AgoraPlatform -->
    <link rel="stylesheet" href="{{ asset('bundles/agoraplatform/css/main.css') }}" type="text/css" />
    <link rel="stylesheet" href="{{ asset('bundles/agoraplatform/css/header.css') }}" type="text/css" />
    <link rel="stylesheet" href="{{ asset('bundles/agoraplatform/css/nav.css') }}" type="text/css" />
    <link rel="stylesheet" href="{{ asset('bundles/agoraplatform/css/footer.css') }}" type="text/css" />

    <!-- Script du Bundle AgoraPlatform -->
    <script type="text/javascript" src="{{ asset('bundles/agoraplatform/script/script.js') }}"> </script>

    <!-- Importation de JQuery en version min : "https://code.jquery.com/jquery/" -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>

    <!-- Importation de la librairie datatables : "https://datatables.net/" -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css">
    <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap.min.js"></script>

    <!-- Ancienne librarie : TODO A SUPPRIMER ? -->
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>

    <!-- Importation de Styles associés à la page étendue -->
    {% block style %}
    {% endblock %}
  </head>

  <body class="d-flex flex-column h-100">

    <!-- Header : Barre de navigations et Titre.s de la page -->
    <header>
      <!-- Création de la barre de navigation dépendant de l'utilisateur (non-connecté, joueur, modérateur, administrateur) -->
      <nav class="navbar fixed-top navbar-expand-custom bg-dark">
        <!-- Définitions d'un bouton de navigation lorsque l'écran est trop petit pour afficher toute la barre nav -->
        <button class="navbar-toggler navbar-dark" type="button" data-toggle="collapse" data-target="#navBarAgora" aria-controls="navBarAgora" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>

        <!-- L'affichage normal de la barre de navigation -->
        <div class="collapse navbar-collapse" id="navBarAgora">
          <!-- Partie collé à gauche de la barre nav -->
          <ul class="navbar-nav mr-auto">
            {% if app.request.get('_route') == 'agora_platform_homepage' %}
                <li class="nav-item active">
                  <a class="nav-link" href="{{ path('agora_platform_homepage') }}">Accueil</a>
	    {% else %}
		<li class="nav-item">
                  <a class="nav-link" href="{{ path('agora_platform_homepage') }}">Accueil</a>
	    {% endif %}
	    </li>

	    {% if app.request.get('_route') == 'agora_platform_gamelist' %}
                <li class="nav-item active">
                  <a class="nav-link" href="{{ path('agora_platform_gamelist') }}">Liste des Jeux</a>
	    {% else %}
                <li class="nav-item">
                  <a class="nav-link" href="{{ path('agora_platform_gamelist') }}">Liste des Jeux</a>
	    {% endif %}
            </li>

	    {% if app.request.get('_route') == 'agora_platform_contact' %}            
		<li class="nav-item active">
             	    <a class="nav-link" href="{{ path('agora_platform_contact') }}">Contact</a>
	    {% else %}
                <li class="nav-item">
                    <a class="nav-link" href="{{ path('agora_platform_contact') }}">Contact</a>
	    {% endif %}
            </li>

	    {% if app.request.get('_route') == 'agora_platform_leaderboard' %}            
                <li class="nav-item active">
                    <a class="nav-link" id="classement" href="{{ path('agora_platform_leaderboard') }}">Classement</a>
	    {% else %}
                <li class="nav-item">
                    <a class="nav-link" id="classement" href="{{ path('agora_platform_leaderboard') }}">Classement</a>
	    {% endif %}
            </li>

            <!-- Si l'utilisateur est connecté-->
            {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
	        {% if app.request.get('_route') == 'agora_platform_gamelist_create' %}            
                    <li class="nav-item active">
                        <a class="nav-link" href="{{ path('agora_platform_gamelist_create') }}">Créer une partie</a>
	        {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('agora_platform_gamelist_create') }}">Créer une partie</a>
	        {% endif %}
                </li>

                {% if app.request.get('_route') == 'agora_platform_joingame' %}            
                    <li class="nav-item active">
                	<a class="nav-link" href="{{ path('agora_platform_joingame') }}">Rejoindre une partie</a>
	        {% else %}
              	    <li class="nav-item">
                	<a class="nav-link" href="{{ path('agora_platform_joingame') }}">Rejoindre une partie</a>
	        {% endif %}
                </li>

		{% if app.request.get('_route') == 'agora_platform_playerParties' %}            
                    <li class="nav-item active">
                        <a class="nav-link" href="{{ path('agora_platform_playerParties', {'userId': app.user.id }) }}">Mes Parties</a>
	        {% else %}
                    <li class="nav-item">
               		<a class="nav-link" href="{{ path('agora_platform_playerParties', {'userId': app.user.id }) }}">Mes Parties</a>
	        {% endif %}
                </li>

              <!-- Si l'utilisateur connecté est un Modérateur -->
              {% if is_granted('ROLE_MODO') %}
                <li class="nav-item">
                  <a class="nav-link" href="{{ path('agora_platform_moderation') }}">Espace Modérateur</a>
                </li>
              {% endif %}
            {% endif %}
          </ul>

          <!-- Partie collée à droite de la barre nav -->
          <ul class="nav navbar-nav navbar-right">
          {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
 	    {% if app.request.get('_route') == 'agora_platform_profile' %}            
              <li class="nav-item active">
                <a class="nav-link" href="{{ path('agora_platform_profile') }}">{{ app.user.username }}</a>
	    {% else %}
              <li class="nav-item">
                <a class="nav-link" href="{{ path('agora_platform_profile') }}">{{ app.user.username }}</a>
	    {% endif %}
            </li>

            <li class="nav-item">
              <a href="{{ path('fos_user_security_logout') }}" class="btn btn-danger">Déconnexion</a>
            </li>

          {% else %}
 	    {% if app.request.get('_route') == 'fos_user_registration_register' %}            
            <li class="nav-item active">
	    {% else %}
            <li class="nav-item">
	    {% endif %}
              <a href="{{ path('fos_user_registration_register') }}" class="btn btn-success">Inscription</a>
            </li>

 	    {% if app.request.get('_route') == 'fos_user_security_login' %}            
            <li class="nav-item active">
	    {% else %}
            <li class="nav-item">
	    {% endif %}
              <a href="{{ path('fos_user_security_login') }}" class="btn btn-success">Connexion</a>
            </li>
          {% endif %}
          </ul>
        </div>
      </nav>
      {% block header %}
      {% endblock %}
    </header>

    <!-- Corps de la page -->
    <main role="main" class="flex-shrink-0">
      <script>
        // START SOCKET CONFIG
        /**
        * Note that you need to change the "sandbox" for the URL of your project.
        * According to the configuration in Sockets/Chat.php , change the port if you need to.
        * @type WebSocket
        */
        //On retrouve l'url de base du serveur à la barbare
        var urlSock = "{{ app.request.getSchemeAndHttpHost() }}";

        //On enlève le http (ou https)
        urlSock = urlSock.split("/");
        urlSock = urlSock[2];

        //On enlève le port
        urlSock = urlSock.split(":");
        urlSock = urlSock[0];
        var conn = new WebSocket('ws://'+ urlSock +':8084');

        conn.onopen = function(e) {
            console.info("Connection established succesfully");
            {% if app.user is not null %}
                //On requète l'historique du tchat
                var clientInformation = { type: "connect", userId: {{ app.user.id }}
            }
            conn.send(JSON.stringify(clientInformation));
            {% endif %}
        };

        conn.onmessage = function(e) {
	    var tchat = document.getElementsByClassName("tchat")[0];
            var data = JSON.parse(e.data);
            if (data.type == "message") {
                var div = document.createElement("div");
                div.className = "messageOther";
                div.textContent = data.username + " : " + data.message;
                document.getElementById("discussion").appendChild(div);
		tchat.style.animation = "clignotchat 1s infinite";
            }
            else if (data.type == "tchat") {
                loadTchat(data);
            }
            console.log(data);
        };

        var error = 0;
        conn.onerror = function(e){
            var div = document.createElement("div");
            div.textContent = "Erreur lors de la connexion, veuillez contacter un administrateur !";
            document.getElementById("discussion").appendChild(div);
            document.getElementById("UserMessage").remove();
            console.error(e);
        };
      </script>
      {% block content %}
      {% endblock %}

      <!-- Le tchat -->
      <div class="tchat">
        <div id="titleTchat">&#9650; Chat &#9650;</div>
        <div id="discussion"></div>
        <textarea id="UserMessage" placeholder="Entrez votre message ici"></textarea>

        <script>
          var IsOpenTchat = 0;
          {% if app.user is null %}
            var div = document.createElement("div");
            div.textContent = "Veuillez vous connecter pour pouvoir envoyer des messages !";
            document.getElementById("discussion").appendChild(div);
            document.getElementById("UserMessage").remove();
          {% else %}
            document.getElementById('UserMessage').addEventListener('keypress', function (event) {
              var key = event.hasOwnProperty('which') ? event.which : event.keyCode;
              // 13 est la touche entrée
              if (key == 13) {
                var div = document.createElement("div");
                var message = document.getElementById('UserMessage').value;
                var clientInformation = {
                  type: "message",
                  userId: {{ app.user.id }},
                  username: "{{ app.user.username }}",
                  message: message
                }

                div.textContent = "Moi : " + message;
                document.getElementById('UserMessage').value = "";
                div.className = "messageMy";
                document.getElementById("discussion").appendChild(div);
                conn.send(JSON.stringify(clientInformation));
              }
            });

            //Permet de charger le tchat lorsqu'un joueur se connecte
            function loadTchat(data) {
              for (var i in data.tchat) {
                var msg = JSON.parse(data.tchat[i]);
                if (msg.userId == "{{ app.user.id }}") {
                  var div = document.createElement("div");
                  div.textContent = "Moi : " + msg.message;
                  div.className = "messageMy";
                  document.getElementById("discussion").appendChild(div);
                } else {
                  var div = document.createElement("div");
                  div.className = "messageOther";
                  div.textContent = msg.username + " : " + msg.message;
                  document.getElementById("discussion").appendChild(div);
                }
              }
            }
          {% endif %}

          var titleChat = document.getElementById("titleTchat");
          titleChat.addEventListener("click", tchatOnClick);

          //Fonction executée lors du cliquage sur le tchat pour l'agrandir/réduire
          function tchatOnClick(e) {
            var tchat = document.getElementsByClassName("tchat")[0];
            if (IsOpenTchat == 0) {
              tchat.style.height = "50%";
	      tchat.style.animation = "none";
	      document.getElementById('titleTchat').innerHTML = "&#9660; Chat &#9660;";
	      document.getElementById('discussion').style.display = 'block';
              IsOpenTchat = 1;
            } else {
              tchat.style.height = "1.5em";
	      tchat.style.animation = "none";
	      document.getElementById('titleTchat').innerHTML = "&#9650; Chat &#9650;";
	      document.getElementById('discussion').style.display = 'none';
              IsOpenTchat = 0;
            }
          }

	  var tchat = document.getElementsByClassName("tchat")[0];
	  tchat.addEventListener("click", onClickNewMessage);

	  //Permet d'arrêter l'animation de nouveau message lorsque l'on clique sur le tchat
	  function onClickNewMessage(e) {
		tchat.style.animation = "none";
	  }
        </script>
      </div>
    </main>

    <!-- Footer : Copyright et Liens utiles -->
    <footer class="footer mt-auto py-3">
      <div class="container">
        {%  block footer %}
        {% endblock %}
        <p>© Copyright - Agora : Salle de jeux virtuelle</p>
      </div>
    </footer>
  </body>
</html>
