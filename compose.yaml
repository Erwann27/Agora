version: '3.8'

services:

  #BASIC AGORA CONFIGURATION

  reverse-proxy:
    # The official v2 Traefik image
    image: traefik:v2.10
    container_name: reverse_proxy
    command:
      - --api.insecure=true
      - --providers.docker
    ports:
      - '${APP_PUBLIC_HTTP_PORT:-80}:80'
      - '${APP_PUBLIC_HTTPS_PORT:-443}:443'
      # The Web UI (enabled by --api.insecure=true)
      - '${TRAEFIK_DASHBOARD_PORT:-8080}:8080'
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/:/etc/traefik

  agora:
    container_name: agora
    image: agora-boilerplate:latest
    ports:
      - '9000'
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./logs/symfony:/var/www/agora/var/log
    depends_on:
      database:
        condition: service_healthy
      database_test:
        condition: service_healthy
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,reverse_proxy,REMOTE_ADDR}
    labels:
      traefik.http.routers.agora.rule: Host(`agora.docker.localhost`)


  caddy:
    image: caddy:2-alpine
    container_name: caddy
    volumes:
      - ./Caddyfile/:/etc/caddy/Caddyfile
      - ./:/var/www/agora
      - ./logs/caddy:/var/log/caddy
    ports:
      - '7070'
    depends_on:
      - agora
    labels:
      traefik.http.routers.caddy.rule: Host(`caddy.docker.localhost`)

###> doctrine/doctrine-bundle ###
  database:
    container_name: database
    image: 'mariadb:10.11.2'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: main
    ports:
      # To allow the host machine to access the ports below, modify the lines below.
      # For example, to allow the host to connect to port 3306 on the container, you would change
      # "3306" to "3306:3306". Where the first port is exposed to the host and the second is the container port.
      # See https://docs.docker.com/compose/compose-file/compose-file-v3/#ports for more information.
      - '3306'
    healthcheck:
      test: [ "CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-ppassword' ]
      timeout: 2s
      retries: 5
###< doctrine/doctrine-bundle ###

  database_test:
    container_name: database_test
    image: 'mariadb:10.11.2'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_TCP_PORT: 3307
      MYSQL_DATABASE: main_test
    ports:
      - '3307'
    healthcheck:
      test: [ "CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-ppassword' ]
      timeout: 2s
      retries: 5

###> symfony/mercure-bundle ###
  mercure:
    container_name: mercure
    image: dunglas/mercure
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins *
        anonymous
        ui
    volumes:
      - ./mercure/Caddyfile/:/etc/caddy/Caddyfile
      - ./logs/mercure:/var/log/mercure
    ports:
      - "80"
    labels:
      traefik.http.routers.mercure.rule: Host(`mercure.docker.localhost`)
###< symfony/mercure-bundle ###
