image: etiennebinginot/agora:1.4

stages:
  - factory
  - sixqp
  - splendor
  - glenmore
  - myrmes
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/
    - var/


variables:
  MYSQL_ROOT_PASSWORD: password
  MYSQL_TCP_PORT: 3306
  MYSQL_DATABASE: main_test
  XDEBUG_MODE: coverage
  SERVER_NAME: ':80'
  MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
  MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
  DATABASE_URL: mysql://root:password@database:3306/main?serverVersion=10.11.2-MariaDB&charset=utf8mb4
  MERCURE_URL: http://mercure/.well-known/mercure
  MERCURE_PUBLIC_URL: ''
  APP_ENV_SERVER: test

services:
  - name: mariadb:10.11.2
    alias: database
  - name: dunglas/mercure:latest
    alias: mercure


before_script:
  - cd app
  - composer install
  - symfony console tailwind:build
  - symfony console --env=test doctrine:migrations:migrate
  - symfony console doctrine:fixtures:load --env=test -n --append

  

.deploy: &deploy
  stage: deploy
  script:
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo $ID_RSA | base64 -d)
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    # Update server project
    - ssh $SERVER_USER@$SERVER_IP "cd $SERVER_LOCATION && git checkout $GIT_BRANCH_NAME && git pull origin $GIT_BRANCH_NAME"

    # Clean docker files
    - ssh $SERVER_USER@$SERVER_IP "cd $SERVER_LOCATION && docker compose down && docker system prune --volumes --force"
    - ssh $SERVER_USER@$SERVER_IP "cd $SERVER_LOCATION && docker compose down && docker volume prune -a"

    # Launch project
    - ssh $SERVER_USER@$SERVER_IP "cd $SERVER_LOCATION && docker compose -f compose_monitor_light.yaml -f $DOCKER_COMPOSE_FILE up --build -d"
  only:
    - develop-game


deploy:dev_game:
  <<: *deploy
  environment:
    name: development
    url: http://srv-dpi-proj-agora-dev-jeux.univ-rouen.fr/
  variables:
    SERVER_USER: $SERVER_GAME_USER
    SERVER_IP: $SERVER_GAME_IP
    SERVER_LOCATION: /var/www/agora
    DOCKER_COMPOSE_FILE: compose.gametest.yaml
    GIT_BRANCH_NAME: develop-game
    ID_RSA: $ID_RSA_GAME

unitFactory:
  needs: []
  stage: factory
  script:
    - php bin/phpunit tests/Game/Factory/Unit
  allow_failure: false
  environment: test

integrationFactory:
  needs: []
  stage: factory
  only:
    - develop-game
    - preprod
    - main
  script:
    - php bin/phpunit tests/Game/Factory/Integration
  allow_failure: false
  environment: test

unit6QP:
  needs: []
  stage: sixqp
  script:
    - php bin/phpunit tests/Game/SixQP/Unit
  allow_failure: false
  environment: test

integration6QP:
  needs : []
  stage: sixqp
  only:
    - develop-game
    - preprod
    - main
  script:
    - php bin/phpunit tests/Game/SixQP/Integration
  allow_failure: false
  environment: test

application6QP:
  needs: []
  stage: sixqp
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console tailwind:build
    - php bin/phpunit tests/Game/SixQP/Application
  allow_failure: false
  environment: test

unitSplendor:
  needs: []
  stage: splendor
  script:
    - php bin/phpunit tests/Game/Splendor/Unit
  allow_failure: false
  environment: test

integrationSplendor:
  needs: []
  stage: splendor
  only:
    - develop-game
    - preprod
    - main
  script:
    - php bin/phpunit tests/Game/Splendor/Integration
  allow_failure: false
  environment: test

applicationSplendor:
  needs: []
  stage: splendor
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console tailwind:build
    - php bin/phpunit tests/Game/Splendor/Application
  allow_failure: false
  environment: test

unitGlenmore:
  needs: []
  stage: glenmore
  script:
    - php bin/phpunit tests/Game/Glenmore/Unit
  allow_failure: false
  environment: test

integrationGlenmore:
  needs: []
  stage: glenmore
  only:
    - develop-game
    - preprod
    - main
  script:
    - php bin/phpunit tests/Game/Glenmore/Integration
  allow_failure: false
  environment: test

unitMyrmes:
    needs: []
    stage: myrmes
    script:
      - php bin/phpunit tests/Game/Myrmes/Unit
    allow_failure: false
    environment: test

integrationMyrmes:
  needs: []
  stage: myrmes
  only:
    - develop-game
    - preprod
    - main
  script:
    - php bin/phpunit tests/Game/Myrmes/Integration
  allow_failure: false
  environment: test