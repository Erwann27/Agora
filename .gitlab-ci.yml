image: etiennebinginot/agora:1.4

stages:
  - build
  - factory
  - sixqp
  - splendor
  - glenmore
  - myrmes
  - report
  - sonarqube
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/
    - var/


variables:
  MYSQL_ROOT_PASSWORD: password
  MYSQL_TCP_PORT: 3306
  MYSQL_DATABASE: main_test
  XDEBUG_MODE: coverage
  SERVER_NAME: ':80'
  MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
  MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
  DATABASE_URL: mysql://root:password@database:3306/main?serverVersion=10.11.2-MariaDB&charset=utf8mb4
  MERCURE_URL: http://mercure/.well-known/mercure
  MERCURE_PUBLIC_URL: ''
  APP_ENV_SERVER: test


before_script:
  - cd app

  

.deploy: &deploy
  stage: deploy
  script:
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo $ID_RSA | base64 -d)
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    # Update server project
    - ssh $SERVER_USER@$SERVER_IP "cd $SERVER_LOCATION && git checkout $GIT_BRANCH_NAME && git pull origin $GIT_BRANCH_NAME"

    # Clean docker files
    - ssh $SERVER_USER@$SERVER_IP "cd $SERVER_LOCATION && docker compose down && docker system prune --volumes --force"
    - ssh $SERVER_USER@$SERVER_IP "cd $SERVER_LOCATION && docker compose down && docker volume prune -a"

    # Launch project
    - ssh $SERVER_USER@$SERVER_IP "cd $SERVER_LOCATION && docker compose -f compose_monitor_light.yaml -f $DOCKER_COMPOSE_FILE up --build -d"
  only:
    - develop-game


deploy:dev_game:
  <<: *deploy
  environment:
    name: development
    url: http://srv-dpi-proj-agora-dev-jeux.univ-rouen.fr/
  variables:
    SERVER_USER: $SERVER_GAME_USER
    SERVER_IP: $SERVER_GAME_IP
    SERVER_LOCATION: /var/www/agora
    DOCKER_COMPOSE_FILE: compose.gametest.yaml
    GIT_BRANCH_NAME: develop-game
    ID_RSA: $ID_RSA_GAME


build:
  stage: build
  before_script:
    - ''
  services:
    - name: mariadb:10.11.2
      alias: database
  script:
    - cd app
    - composer install
    - symfony console tailwind:build
    - symfony console --env=test doctrine:migrations:migrate
    - symfony console doctrine:fixtures:load --env=test -n --append
    - mkdir db
    - symfony console doctrine:schema:create --dump-sql > db/dump.sql
  artifacts:
    untracked: true


unitFactory:
  needs: [build]
  stage: factory
  script:
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageUnitFactory.xml --log-junit reports/phpUnitFactory.xml --coverage-php coverage/coverageUnitFactory.php --colors=never tests/Game/Factory/Unit
  allow_failure: false
  environment: test
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

integrationFactory:
  needs: [build]
  stage: factory
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console doctrine:fixtures:load --env=test -n --append
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageIntegrationFactory.xml --log-junit reports/phpIntegrationFactory.xml --coverage-php coverage/coverageIntegrationFactory.php --colors=never tests/Game/Factory/Integration
  allow_failure: false
  environment: test
  services:
    - name: mariadb:10.11.2
      alias: database
      command:
        - 'mysql --user=root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" < app/db/dump.sql'
        - 'mysql start'
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

unit6QP:
  needs: [build]
  stage: sixqp
  script:
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageUnit6QP.xml --log-junit reports/phpUnit6QP.xml --coverage-php coverage/coverageUnit6QP.php --colors=never tests/Game/SixQP/Unit
  allow_failure: false
  environment: test
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

integration6QP:
  needs : [build]
  stage: sixqp
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console doctrine:fixtures:load --env=test -n --append
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageIntegration6QP.xml --log-junit reports/phpIntegration6QP.xml --coverage-php coverage/coverageIntegration6QP.php --colors=never tests/Game/SixQP/Integration
  allow_failure: false
  environment: test
  services:
    - name: mariadb:10.11.2
      alias: database
      command:
        - 'mysql --user=root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" < app/db/dump.sql'
        - 'mysql start'
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

application6QP:
  needs: [build]
  stage: sixqp
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console doctrine:fixtures:load --env=test -n --append
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageApp6QP.xml --log-junit reports/phpApp6QP.xml --coverage-php coverage/coverageApp6QP.php --colors=never tests/Game/SixQP/Application
  allow_failure: false
  environment: test
  services:
    - name: mariadb:10.11.2
      alias: database
      command:
        - 'mysql --user=root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" < app/db/dump.sql'
        - 'mysql start'
    - name: dunglas/mercure:latest
      alias: mercure
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

unitSplendor:
  needs: [build]
  stage: splendor
  script:
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageUnitSplendor.xml --log-junit reports/phpUnitSplendor.xml --coverage-php coverage/coverageUnitSplendor.php --colors=never tests/Game/Splendor/Unit
  allow_failure: false
  environment: test
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

integrationSplendor:
  needs: [build]
  stage: splendor
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console doctrine:fixtures:load --env=test -n --append
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageIntegrationSplendor.xml --log-junit reports/phpIntegrationSplendor.xml --coverage-php coverage/coverageIntegrationSplendor.php --colors=never tests/Game/Splendor/Integration
  allow_failure: false
  environment: test
  services:
    - name: mariadb:10.11.2
      alias: database
      command:
        - 'mysql --user=root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" < app/db/dump.sql'
        - 'mysql start'
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

applicationSplendor:
  needs: [build]
  stage: splendor
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console doctrine:fixtures:load --env=test -n --append
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageAppSplendor.xml --log-junit reports/phpAppSplendor.xml --coverage-php coverage/coverageAppSplendor.php --colors=never tests/Game/Splendor/Application
  allow_failure: false
  environment: test
  services:
    - name: mariadb:10.11.2
      alias: database
      command:
        - 'mysql --user=root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" < app/db/dump.sql'
        - 'mysql start'
    - name: dunglas/mercure:latest
      alias: mercure
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

unitGlenmore:
  needs: [build]
  stage: glenmore
  script:
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageUnitGlenmore.xml --log-junit reports/phpUnitGlenmore.xml --coverage-php coverage/coverageUnitGlenmore.php --colors=never tests/Game/Glenmore/Unit
  allow_failure: false
  environment: test
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

integrationGlenmore:
  needs: [build]
  stage: glenmore
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console doctrine:fixtures:load --env=test -n --append
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageIntegrationGlenmore.xml --log-junit reports/phpIntegrationGlenmore.xml --coverage-php coverage/coverageIntegrationGlenmore.php --colors=never tests/Game/Glenmore/Integration
  allow_failure: false
  environment: test
  services:
    - name: mariadb:10.11.2
      alias: database
      command:
        - 'mysql --user=root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" < app/db/dump.sql'
        - 'mysql start'
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

applicationGlenmore:
  needs: [build]
  stage: glenmore
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console doctrine:fixtures:load --env=test -n --append
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageAppGlenmore.xml --log-junit reports/phpAppGlenmore.xml --coverage-php coverage/coverageAppGlenmore.php --colors=never tests/Game/Glenmore/Application
  allow_failure: false
  environment: test
  services:
    - name: mariadb:10.11.2
      alias: database
      command:
        - 'mysql --user=root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" < app/db/dump.sql'
        - 'mysql start'
    - name: dunglas/mercure:latest
      alias: mercure
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

unitMyrmes:
  needs: [build]
  stage: myrmes
  script:
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageUnitMyrmes.xml --log-junit reports/phpUnitMyrmes.xml --coverage-php coverage/coverageUnitMyrmes.php --colors=never tests/Game/Myrmes/Unit
  allow_failure: false
  environment: test
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

integrationMyrmes:
  needs: [build]
  stage: myrmes
  only:
    - develop-game
    - preprod
    - main
  script:
    - symfony console doctrine:fixtures:load --env=test -n --append
    - php bin/phpunit --coverage-text --coverage-cobertura coverage-cobertura/coverageIntegrationMyrmes.xml --log-junit reports/phpIntegrationMyrmes.xml --coverage-php coverage/coverageIntegrationMyrmes.php --colors=never tests/Game/Myrmes/Integration
  allow_failure: false
  environment: test
  services:
    - name: mariadb:10.11.2
      alias: database
      command:
        - 'mysql --user=root --password="$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE" < app/db/dump.sql'
        - 'mysql start'
  artifacts:
    paths:
      - app/reports/*
      - app/coverage/*
      - app/coverage-cobertura/*
    expire_in: 30 min

report:
  stage: report
  before_script:
    - cd app
    - rm composer.lock
    - composer require psr/log 1.1.4
    - composer require nimut/phpunit-merger
    - composer require sweetchuck/junit-merger-cli 1.0.0 -W
  script:
    - vendor/bin/phpunit-merger coverage coverage/ coverage/coverage.xml
    - find reports/ -type f -name '*.xml' | vendor/bin/junit-merger merge:files --handler='dom_read' > reports/report.xml
  allow_failure: false
  artifacts:
    paths:
      - app/reports/report.xml
      - app/coverage/coverage.xml
      - app/coverage-cobertura/*.xml
    reports:
      junit: app/reports/report.xml
      coverage_report:
        coverage_format: cobertura
        path: app/coverage-cobertura/*.xml

sonarqube-check:
  stage: sonarqube
  before_script:
    - ''
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - develop-game
    - preprod
    - main
