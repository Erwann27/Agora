{% extends 'platform/dashboard/layout.html.twig' %}
{% block title %}
Accueil
{% endblock %}
{% block content %}
<div class="relative isolate px-6 pt-14 lg:px-8">
   <div class="absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80" aria-hidden="true">
      <div class="relative left-[calc(50%-11rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-danger to-primary opacity-30 sm:left-[calc(50%-30rem)] sm:w-[72.1875rem]" style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"></div>
   </div>
   <div class="space-y-12 lg:mr-20">
      {{ form_start(form) }}
      <div class="mt-10 grid xl:grid-cols-3 lg:grid-cols-2 grid-cols-1 gap-x-6 gap-y-8 ">
         <div class="relative isolate flex flex-col justify-end overflow-hidden rounded-2xl bg-gray-900 px-8 pb-8 pt-80 sm:pt-48 lg:pt-80 max-w-xs row-span-3 mx-auto">
            <img src="{{ asset(game.getImgURL) }}" alt="{{ game.name }} icon" class="absolute inset-0 -z-10 h-full w-full object-cover">
            <div class="absolute inset-0 -z-10 bg-gradient-to-t from-gray-900 via-gray-900/40"></div>
            <div class="absolute inset-0 -z-10 rounded-2xl ring-1 ring-inset ring-gray-900/10"></div>
            <h3 class=" text-lg font-semibold leading-6 text-white">
               Nouvelle Table -
               {{ game.name }}
            </h3>
         </div>
         <div>
            {{ form_label(form.nbUserMax, 'Nombre de joueur', { 'label_attr': {
            'class': 'block text-sm font-medium leading-6 text-gray-900'
            }}) }}
            <p class="block text-sm font-medium leading-6 text-gray-600">de
               {{ game.getMinPlayers }}
               à
               {{ game.getMaxPlayers }}
               joueurs
            </p>
            <div class="mt-2">
               {{ form_widget(form.nbUserMax, {'id': 'nbUsers', 'attr': {
               'class': 'block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-primary sm:text-sm sm:leading-6'
               }}) }}
            </div>
         </div>
         <div>
            {{ form_label(form.nbInvitations, 'Nombre de place réservé', {'label_attr': {
            'class': 'block text-sm font-medium leading-6 text-gray-900'
            }}) }}
            <p class="block text-sm font-medium leading-6 text-gray-600">Place accessible uniquement via un lien généré à la création de la table.</p>
            <div class="mt-2">
               {{ form_widget(form.nbInvitations, { 'id': 'nbInvitations','attr': {
               'class': 'block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-primary sm:text-sm sm:leading-6'
               }}) }}
            </div>
         </div>
         <div>
            <div class="mt-2 relative text-left">
               <div>
                  <button type="button" class="inline-flex w-full justify-center gap-x-1.5 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50" id="contacts_list_button" aria-expanded="true" aria-haspopup="true">
                     {{ form_label(form.invitedContacts, 'Contacts à inviter', {'label_attr': {
                        'class': 'block text-sm font-medium leading-6 text-gray-900'
                     }}) }}
                     <svg class="-mr-1 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                     </svg>
                  </button>
               </div>

               <div id="contacts_list" class="hidden absolute left-0 z-10 mt-2 w-56 origin-top-left rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
                  <div class="py-1">
                     {{ form_widget(form.invitedContacts, { 'id': 'invitedContacts','attr': {
                        'class': 'block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-primary sm:text-sm sm:leading-6'
                     }}) }}
                  </div>
               </div>
            </div>
         </div>
         <div>
            <label for="inactivity" class="block text-sm font-medium leading-6 text-gray-900">Temps d'inactivité</label>
            <p class="block text-sm font-medium leading-6 text-gray-600">Permet de définir le temps de jeu max avant l'expulsion du joueur (de 24 à 168 heures).</p>
            <div class="relative mt-2 rounded-md shadow-sm">
               {{ form_widget(form.inactivityHours, {'attr': {
               'class': 'block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-primary sm:text-sm sm:leading-6'
               }}) }}
            </div>
         </div>
         <div class="mt-16">
            <div class="flex justify-center space-x-4">
               <button type="button" onclick="window.history.back();" class="text-white bg-red-500 hover:bg-red-400 focus:ring-4 focus:outline-none focus:ring-red-300 font-semibold rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">
                  Retour
               </button>
               <button type="submit" class="text-white bg-primary hover:bg-blue-400 focus:ring-4 focus:outline-none focus:ring-blue-300 font-semibold rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">
                  Créer une table
               </button>
            </div>
         </div>
         <div class="hidden">
            {{ form_rest(form) }}
         </div>
      </div>
      {{ form_end(form) }}
      <div class="absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]" aria-hidden="true">
         <div class="relative left-[calc(50%+3rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 bg-gradient-to-tr from-primary to-danger opacity-30 sm:left-[calc(50%+36rem)] sm:w-[72.1875rem]" style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"></div>
      </div>
   </div>
</div>
<script>
   document.addEventListener('DOMContentLoaded', function () {
      const nbUsers = document.getElementById('nbUsers');
      const nbInvitations = document.getElementById('nbInvitations');
      const invitedContacts = document.getElementById('invitedContacts');

      const menuButton = document.getElementById('contacts_list_button');
      const menu = document.getElementById('contacts_list');

      // Close the menu if the user clicks outside of it
      document.addEventListener('click', function(event) {
         if (!menu.parentElement.contains(event.target)) {
            menu.classList.add('hidden');
         }
      });

      // Show or hide the menu when clicking on the button
      menuButton.addEventListener('click', function() {
         menu.classList.toggle('hidden');
      });

      //Displaying checboxes of contacts in a list

      const list = document.createElement("ul");
      const checkboxes = invitedContacts.querySelectorAll('input[type="checkbox"]');
      const labels = invitedContacts.querySelectorAll('label');
      for (let i = 0; i < checkboxes.length; i++ ){
         checkboxes[i].addEventListener('change', checkNbOfInvitedContacts);
         let li = document.createElement("li");
         li.appendChild(labels[i]);
         li.appendChild(checkboxes[i]);
         list.appendChild(li);
      }
      invitedContacts.appendChild(list);

      // Change the options of nbInvitation depending on the selected value in nbUsers
      function dynamicNbInvitations() {
         var selectedValue = parseInt(nbUsers.value); // Récupérer la valeur sélectionnée et convertir en entier
         nbInvitations.innerHTML = "";

         for (var i = 0; i < selectedValue; i++) {
         var option = document.createElement('option');
         option.value = i;
         option.textContent = i;
         nbInvitations.appendChild(option);
         }
      }
      //reset all choices for the invited contacts when changing the nb of players
      function resetInvitedContacts(){
         checkboxes.forEach(function(checkbox){
            checkbox.checked = false;
         })
      }

      //limits the number of checks in the contact list, depending on the value of "number of players"
      function checkNbOfInvitedContacts()
      {
         let nbOfChecks = 0;
         for (let i = 0; i < checkboxes.length; i++ ){
            if (checkboxes[i].checked){
               nbOfChecks++;
            }
         }
         if (nbOfChecks == (parseInt(nbUsers.value) - 1)){
            for (let i = 0; i < checkboxes.length; i++ ){
               if (!checkboxes[i].checked){
                  checkboxes[i].disabled = true;
               }
            }
         }
         else{
            for (let i = 0; i < checkboxes.length; i++ ){
               if (!checkboxes[i].checked){
                  checkboxes[i].disabled = false;
               }
            }
         }
      }
      // Initialize the nbInvitations select input
      dynamicNbInvitations();

      nbUsers.addEventListener('change', dynamicNbInvitations);
      nbUsers.addEventListener('change', resetInvitedContacts);




   });
</script>
{% endblock %}